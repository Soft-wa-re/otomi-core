{{- $v := .Values }}
{{- $vl:= $v.apps.thanos }}
{{- $objstore:= $vl | get "provider" dict }}


## @param objstoreConfig The [objstore configuration](https://thanos.io/tip/thanos/storage.md/)
## Specify content for objstore.yml
##
{{- with $objstore | get "localMinio" nil }}
objstoreConfig: |-
  type: s3
  config:
    bucket: {{ $vl.objstore.localMinio.bucket }}
    endpoint: minio.minio.svc.cluster.local:9000
    access_key: {{ $vl.objstore.localMinio.accessKey }}
    secret_key: {{ $vl.objstore.localMinio.secretKey }}
    insecure: true
{{- end }}
{{- with $provider | get "s3Like" nil }}
objstoreConfig: |-
  type: s3
  config:
    bucket: {{ $vl.objstore.s3Like.bucket }}
    endpoint: {{ $vl.objstore.s3Like.endpoint }}
    access_key: {{ $vl.objstore.s3Like.accessKey }}
    secret_key: {{ $vl.objstore.s3Like.secretKey }}
    insecure: true
{{- end }}

## @section Thanos Query parameters
query:
  enabled: true
  stores: {{- $vl.query.stores | toYaml | nindent 4 }}
  resources: {{- $vl.query.resources | toYaml | nindent 4 }}

## @section Thanos Query Frontend parameters
# queryFrontend:
#   enabled: false

## @section Thanos Bucket Web parameters
bucketweb:
  enabled: true

## @section Thanos Compactor parameters
compactor:
  enabled: true

## @section Thanos Store Gateway parameters
storegateway:
  enabled: true

## @section Thanos Receive parameters
receive:
  enabled: true
  mode: standalone
  resources: {{- $vl.query.resources | toYaml | nindent 4 }}

## @section Thanos Ruler parameters
ruler:
  enabled: true
  alertmanagers:
    - http://prometheus-operator-alertmanager.monitoring.svc.cluster.local:9093
  config: |-
    groups:
      - name: "metamonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: absent(up{prometheus="monitoring/prometheus-operator"}) 
