{{- $v := .Values }}
{{- $vl:= $v.apps.thanos }}
{{- $objs:= $vl | get "objstore" dict }}


## @section Thanos Query parameters
query:
  enabled: false

## @section Thanos Query Frontend parameters
queryFrontend:
  enabled: false

## @section Thanos Bucket Web parameters
bucketweb:
  enabled: true
  resources: {{- toYaml $vl.bucketweb.resources | nindent 4 }}

## @section Thanos Compactor parameters
compactor:
  enabled: true
  retentionResolutionRaw: {{ $vl.compactor.retentionResolutionRaw }}
  retentionResolution5m: {{ $vl.compactor.retentionResolution5m }}
  retentionResolution1h: {{ $vl.compactor.retentionResolution1h }}
  extraFlags:
    - --deduplication.replica-label=replica

## @section Thanos Store Gateway parameters
storegateway:
  enabled: true
  persistence:
    size: {{ $vl.storegateway.persistence.size }}
  resources: {{- toYaml $vl.storegateway.resources | nindent 4 }}

## @section Thanos Receive parameters
receive:
  enabled: true
  mode: {{ $vl.receiver.mode }}
  replicacount: {{ $vl.receiver.replicaCount }}
  persistence:
    size: {{ $vl.receiver.persistence.size }}
  resources: {{- toYaml $vl.receiver.resources | nindent 4 }}

## @section Thanos Ruler parameters
ruler:
  enabled: {{ $vl.ruler.enabled }}
  persistence:
    size: {{ $vl.ruler.persistence.size }}
  resources: {{- toYaml $vl.ruler.resources | nindent 4 }}
  alertmanagers:
    - http://prometheus-operator-alertmanager.monitoring.svc.cluster.local:9093
  config: |-
    groups:
      - name: "metamonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: absent(up{prometheus="monitoring/prometheus-operator"}) 

## @param objstoreConfig The [objstore configuration](https://thanos.io/tip/thanos/storage.md/)
## Specify content for objstore.yml
##
{{- with $objs | get "localMinio" nil }}
objstoreConfig: |-
  type: s3
  config:
    bucket: {{ .bucket }}
    endpoint: minio.minio.svc.cluster.local:9000
    access_key: {{ .accessKey }}
    secret_key: {{ .secretKey }}
    insecure: true
{{- end }}
{{- with $objs | get "s3Like" nil }}
objstoreConfig: |-
  type: s3
  config:
    bucket: {{ .bucket }}
    endpoint: {{ .s3Url }}
    access_key: {{ .accessKey }}
    secret_key: {{ .secretKey }}
    insecure: true
{{- end }}
